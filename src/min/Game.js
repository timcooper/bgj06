/*! rainbows 27-10-2013 */
var Main=Main||{};Main.Game=function(a){this.game=a},Main.Game.prototype={LEVELS:{1:{y:80},2:{y:208},3:{y:336}},COLORS:{red:{particle:"particleRed",gate:"gateRed"},yellow:{particle:"particleYellow",gate:"gateYellow"},blue:{particle:"particleBlue",gate:"gateBlue"},orange:{particle:"particleOrange",gate:"gateOrange"},green:{particle:"particleGreen",gate:"gateGreen"},purple:{particle:"particlePurple",gate:"gatePurple"},white:{particle:"particleWhite"},black:{particle:"particle"}},player:Phaser.Sprite,enabledColors:["red"],redKey:null,yellowKey:null,blueKey:null,bg:null,barriers:[],gates:[],maxVelocity:0,currentColor:"black",tween:null,gatesCleared:0,lastTime:0,preload:function(){},create:function(){this.game.world.setBounds(0,0,12800,this.game.height),this.bg=this.game.add.tileSprite(0,0,this.game.width,this.game.height,"background"),this.bg.fixedToCamera=!0,this.player=this.game.add.sprite(0,50,"particle"),this.player.anchor.setTo(.5,.5),this.tween=this.game.add.tween(this.player.body.velocity).to({x:200},1e3,Phaser.Easing.Cubic.Out,!0),this.player.body.acceleration.x=16,this.player.body.maxVelocity.x=640,this.game.camera.follow(this.player),Math.max(this.game.width,this.game.height)/8,this.game.camera.deadzone=new Phaser.Rectangle(0,0,200,this.game.height),this.enableColors(),this.redKey=this.game.input.keyboard.addKey(Phaser.Keyboard.ONE),this.yellowKey=this.game.input.keyboard.addKey(Phaser.Keyboard.TWO),this.blueKey=this.game.input.keyboard.addKey(Phaser.Keyboard.THREE),this.barriers=this.game.add.group(),this.barriers.createMultiple(25,"barrier1"),this.barriers.setAll("anchor.x",.5),this.barriers.setAll("outOfBoundsKill",!0),this.gates=this.game.add.group(),this.generateLevel(),this.player.bringToTop()},update:function(){this.bg.tilePosition.x=-this.game.camera.x,this.bg.tilePosition.y=-this.game.camera.y,this.setVerticalLevel(),this.game.physics.collide(this.barriers,this.player,this.hitWall,null,this),this.colorBlack(),this.redKey.isDown&&this.colorRed(),this.yellowKey.isDown&&this.colorYellow(),this.blueKey.isDown&&this.colorBlue(),this.atEnd()&&this.finish(!0),this.writeDebug()},finish:function(a){a&&Main.MainMenu.prototype.unlockedLevels.length<6?(-1===Main.MainMenu.prototype.unlockedLevels.indexOf(Main.MainMenu.prototype.currentLevel+1)&&Main.MainMenu.prototype.unlockedLevels.push(Main.MainMenu.prototype.currentLevel+1),alert("Winner! You cleared all "+this.gatesCleared+" gates!")):alert("Fail! You crashed after "+this.gatesCleared+"/25 gates"),this.gatesCleared=0,this.lastTime=this.game.time.now,this.bg.tilePosition.x=0,this.bg.tilePosition.y=0,this.game.state.start("mainmenu",!0)},atEnd:function(){return this.player.x>=this.game.world.width},hitWall:function(a,b){b.alive&&("barrier1"==b.key&&this.player.center.y<144||"barrier2"==b.key&&this.player.center.y<272&&this.player.center.x>144||"barrier3"==b.key&&this.player.center.y>272)?(b.alive=!1,"gate"+this.currentColor.charAt(0).toUpperCase()+this.currentColor.slice(1)===this.gates.getAt(this.barriers.getIndex(b)).key?(this.gatesCleared++,this.player.body.velocity.x+=128,this.game.add.tween(this.player.body.velocity).to({x:this.player.body.velocity.x-32},500,Phaser.Easing.Cubic.Out,!0)):this.finish(!1)):this.finish(!1)},colorBlack:function(){this.currentColor="black",this.player.loadTexture(this.COLORS.black.particle,0)},colorRed:function(){this.yellowKey.isDown&&this.blueKey.isDown&&this.canChange("white")?(this.currentColor="white",this.player.loadTexture(this.COLORS.white.particle,0)):this.yellowKey.isDown&&this.canChange("orange")?(this.currentColor="orange",this.player.loadTexture(this.COLORS.orange.particle,0)):this.blueKey.isDown&&this.canChange("purple")?(this.currentColor="purple",this.player.loadTexture(this.COLORS.purple.particle,0)):(this.currentColor="red",this.player.loadTexture(this.COLORS.red.particle,0))},colorYellow:function(){this.redKey.isDown&&this.blueKey.isDown&&this.canChange("white")?(this.currentColor="white",this.player.loadTexture(this.COLORS.white.particle,0)):this.redKey.isDown&&this.canChange("orange")?(this.currentColor="orange",this.player.loadTexture(this.COLORS.orange.particle,0)):this.blueKey.isDown&&this.canChange("green")?(this.currentColor="green",this.player.loadTexture(this.COLORS.green.particle,0)):this.canChange("yellow")&&(this.currentColor="yellow",this.player.loadTexture(this.COLORS.yellow.particle,0))},colorBlue:function(){this.yellowKey.isDown&&this.redKey.isDown&&this.canChange("white")?(this.currentColor="white",this.player.loadTexture(this.COLORS.white.particle,0)):this.yellowKey.isDown&&this.canChange("green")?(this.currentColor="green",this.player.loadTexture(this.COLORS.green.particle,0)):this.redKey.isDown&&this.canChange("purple")?(this.currentColor="purple",this.player.loadTexture(this.COLORS.purple.particle,0)):this.canChange("blue")&&(this.currentColor="blue",this.player.loadTexture(this.COLORS.blue.particle,0))},setVerticalLevel:function(){var a=this.game.input.activePointer.y;144>a?this.player.centerOn(this.player.center.x,this.LEVELS[1].y):272>a?this.player.centerOn(this.player.center.x,this.LEVELS[2].y):this.player.centerOn(this.player.center.x,this.LEVELS[3].y)},enableColors:function(){var a=0;for(var b in this.COLORS)a++,a<=Main.MainMenu.prototype.currentLevel&&this.enabledColors.push(b)},generateLevel:function(){for(var a=null,b=0;b<this.barriers.length;b++){var c=this.game.rnd.integerInRange(1,4),d=this.COLORS[this.enabledColors[this.game.rnd.integerInRange(1,this.enabledColors.length+1)-1]],e=512*(b+1);a=this.barriers.getFirstDead(),a.body.customSeparateX=!0,a.body.customSeparateY=!0,c>1&&a.loadTexture("barrier"+c,0);var f=this.game.add.sprite(0,0,d.gate);f.centerOn(e,this.LEVELS[c].y),this.gates.add(f),a.reset(e,0),a.body.immovable=!0}},canChange:function(a){return-1!==this.enabledColors.indexOf(a)},randomColor:function(){var a,b=0;for(var c in this.COLORS)this.canChange(c)&&Math.random()<1/++b&&(a=c);return a},writeDebug:function(){var a=window.document.getElementById("debug-velocity"),b=Math.round(this.player.body.velocity.x),c=window.document.getElementById("debug-dist");b>this.maxVelocity&&(this.maxVelocity=b),a.innerHTML=b,c.innerHTML=Math.round(this.player.center.x+this.game.camera.x)}};